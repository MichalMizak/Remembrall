package sk.upjs.paz1c.nezabudal.forms;

import java.time.LocalDateTime;
import sk.upjs.paz1c.nezabudal.dao.ObjectFactory;
import sk.upjs.paz1c.nezabudal.entity.Category;
import sk.upjs.paz1c.nezabudal.entity.Item;
import sk.upjs.paz1c.nezabudal.entity.Loan;
import sk.upjs.paz1c.nezabudal.gui.models.AttributeValuesTableModel;
import sk.upjs.paz1c.nezabudal.gui.models.CategoryComboBoxModel;
import sk.upjs.paz1c.nezabudal.gui.models.ItemComboBoxModel;
import sk.upjs.paz1c.nezabudal.gui.models.LoanTableModel;

/**
 *
 * @author Mikey
 */
public class AddLoanDialog extends javax.swing.JDialog {

    private static final int IS_BORROWED_ROW = 2;
    /**
     * Creates new form AddItemDialog
     */
    public AddLoanDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDesign("Windows");
    }

    private void setDesign(String design) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (design.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddLoanDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddLoanDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddLoanDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddLoanDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        loanTable = new javax.swing.JTable();
        categoryComboBox = new javax.swing.JComboBox<>();
        addLoanButton1 = new javax.swing.JButton();
        itemLabel = new javax.swing.JLabel();
        itemComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nová pôžička");
        setModal(true);

        categoryLabel.setText("Kategória");

        loanTable.setModel(new LoanTableModel());
        jScrollPane1.setViewportView(loanTable);

        categoryComboBox.setModel(ObjectFactory.INSTANCE.getCategoryComboBoxModel());
        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        addLoanButton1.setText("Požičaj");
        addLoanButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLoanButton1ActionPerformed(evt);
            }
        });

        itemLabel.setText("Predmet");

        itemComboBox.setModel(new ItemComboBoxModel(getSelectedCategory()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addLoanButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemComboBox, 0, 207, Short.MAX_VALUE))
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemLabel)
                    .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addLoanButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        ((ItemComboBoxModel)itemComboBox.getModel()).refresh(getSelectedCategory());
        
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    private void addLoanButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLoanButton1ActionPerformed

        // TODO proper validation
        String[] secondRowValues = ((LoanTableModel) loanTable.getModel()).getSecondColumnValues();
        
        // potentially will be made into a checkbox
       String isBorrowedString = secondRowValues[IS_BORROWED_ROW-1];
       boolean isBorrowed;
                System.out.println(isBorrowedString);
        if (!(isBorrowedString == null) && (isBorrowedString.toLowerCase().equals("ano") || isBorrowedString.toLowerCase().equals("áno"))) {
            isBorrowed = true;
        } else if (!(isBorrowedString == null) && isBorrowedString.toLowerCase().equals("nie")) {
            isBorrowed = false;
        } else {
            WarningDialog warningDialog = new WarningDialog(this, true, "Nesprávny formát riadka \"Požičané mne\"");
            warningDialog.setVisible(true);
           return;
        }
        
      // only after validation
      // Loan loan = new Loan(getSelectedItem(), secondRowValues[0], isBorrowed, secondRowValues[2], LocalDateTime.parse(secondRowValues[3]), LocalDateTime.parse(secondRowValues[4]));
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_addLoanButton1ActionPerformed

    private Item getSelectedItem() {
        // validate
        return (Item)((ItemComboBoxModel) itemComboBox.getModel()).getSelectedItem();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddLoanDialog dialog = new AddLoanDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLoanButton1;
    private javax.swing.JComboBox<Category> categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JComboBox<Item> itemComboBox;
    private javax.swing.JLabel itemLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable loanTable;
    // End of variables declaration//GEN-END:variables

    private Category getSelectedCategory() {
        return (Category) ((CategoryComboBoxModel) categoryComboBox.getModel()).getSelectedItem();
    }
}
